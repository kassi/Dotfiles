#!/usr/bin/env bash
### Oxygen
### temporarily disabled. Homebrew complained about it
### export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/Applications/Developer/oxygen

# Standard environment variables
export EDITOR=edit
export VISUAL=vim
export BUNDLER_EDITOR="code"
export HISTCONTROL=ignoredups
export HISTSIZE=10000

# OSX: Make clean tarballs and more in Leopard
export COPYFILE_DISABLE=true

# Ansible
export ANSIBLE_HOSTS=$HOME/System/Hosts/hosts

# Erlang
export ERL_AFLAGS="-kernel shell_history enabled"

### Java
export JAVA_HOME=/Library/Java/Home
PATH=${JAVA_HOME}:$PATH

### MySQL
export MYSQL_HOME=/usr/local/opt/mysql@5.7/bin
# export DYLD_LIBRARY_PATH=/usr/local/mysql/lib:$DYLD_LIBRARY_PATH
PATH=${MYSQL_HOME}:$PATH

### PostgreSQL
export PGDATA=/usr/local/var/postgres

### QT
<<<<<<< HEAD
if [ -d /usr/local/opt/qt ]; then export PATH=/usr/local/opt/qt/bin:$PATH; fi
if [ -d /usr/local/opt/qt55 ]; then export PATH=/usr/local/opt/qt55/bin:$PATH; fi # TODO: to be checked
=======
export PATH=/usr/local/opt/qt/bin:$PATH

#ADDED BY 010 EDITOR
export PATH="$PATH:/Applications/010 Editor.app/Contents/CmdLine"
>>>>>>> Clean up for new tools

# for lib in "icu4c" "openssl@1.1" "readline"; do
#   LDFLAGS="$LDFLAGS -L/usr/local/opt/$lib/lib"
#   CPPFLAGS="$CPPFLAGS -I/usr/local/opt/$lib/include"
# done
# for lib in "icu4c" "openssl@1.1"; do
#   PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/usr/local/opt/$lib/lib/pkgconfig"
# done
# for lib in "openssl@1.1"; do
#   PATH=/usr/local/opt/$lib/bin:$PATH
# done
export LDFLAGS
export CPPFLAGS
export PKG_CONFIG_PATH
export PATH=$HOME/bin:/usr/local/bin:/usr/local/sbin:$PATH

# asdf
[ -f "$HOME/.asdf/asdf.sh" ] && . $HOME/.asdf/asdf.sh
[ -f $HOME/.asdf/completions/asdf.bash ] && . $HOME/.asdf/completions/asdf.bash

### Perforce
#export P4PORT=1666
#export P4CLIENT=$USER
#export P4ROOT=$HOME/Projects/P4ROOT

### Perl
export PERL5LIB=

### perlbrew
export PERLBREW_ROOT=$HOME/Library/Perl

### Python
# export PYTHONPATH=`brew --prefix`/lib/python3.6/site-packages
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

### Powerline
export POWERLINE_BINDINGS_PATH=/usr/local/lib/python2.7/site-packages/powerline/bindings

### Ruby
export RDOCOPT="--encoding=UTF-8"
# disabled, because rvm complains about it
# export RUBYOPT=rubygems

### RVM
# [ -f "$HOME/.rvm/scripts/rvm" ] && . "$HOME/.rvm/scripts/rvm"
export rvm_silence_path_mismatch_check_flag=1 # to avoid stupid warnings

### Enhanced Git featured prompt
export PS1=$Yellow$PathShort$Color_Off'$(git branch &>/dev/null;\
if [ $? -eq 0 ]; then \
  echo \
    "$(echo `git status` | grep "nothing to commit" > /dev/null 2>&1; \
      if [ "$?" -eq "0" ]; then \
        echo -n " '$Green'"$(_git_branch_fmt "'$IBlack'['$Green'%s'$IBlack']"); \
      else \
        echo -n " '$IRed'"$(_git_branch_fmt "'$IBlack'['$IRed'%s'$IBlack'↯]"); \
      fi) $( \
      _git_stashes "'$IBlack'['$Yellow'%s'$IBlack']") $( \
      echo `git status` | grep "Your branch is up-to-date" > /dev/null 2>&1; \
      if [ "$?" -eq "0" ]; then \
        echo -n $(_git_remote_fmt "'$IBlack'['$Green'%s'$IBlack']"); \
      else \
        echo -n $(_git_remote_fmt "'$IBlack'['$IRed'%s'$IBlack'↯]"); \
      fi)"; \
else \
  echo -n " '$Color_Off'"; \
fi)'"\n"$IBlack"\t"$Color_Off" \$ "

[ -f "${HOME}/.bash_secrets" ] && . "${HOME}/.bash_secrets"
